trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  resourceGroupName: 'TallerPipelines'
  appServicePlan: 'ASP-TallerPipelines-a1bc'
  dockerRegistryServiceConnection: 'acr-connection' 
  location: 'EastUS'

  # App services
  todosApiName: 'TODOs-API'
  usersApiName: 'USERS-API'
  todosAuthApiName: 'TODO-AUTH-API'
  todosFrontendName: 'TODO-frontend'
  logProcessorName: 'log-message-processor'

  # Container images
  todosApiImage: '$(dockerRegistryServiceConnection)/todos-api:latest'
  usersApiImage: '$(dockerRegistryServiceConnection)/users-api:latest'
  todosAuthApiImage: '$(dockerRegistryServiceConnection)/auth-api:latest'
  todosFrontendImage: '$(dockerRegistryServiceConnection)/frontend:latest'
  logProcessorImage: '$(dockerRegistryServiceConnection)/log-processor:latest'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'PipelineConnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |

      # Create App Services and set container images
      az webapp create \
        --resource-group ${{ variables.resourceGroupName }} \
        --plan ${{ variables.appServicePlan }} \
        --name ${{ variables.todosApiName }} \
        --deployment-container-image-name ${{ variables.todosApiImage }}

      az webapp create \
        --resource-group ${{ variables.resourceGroupName }} \
        --plan ${{ variables.appServicePlan }} \
        --name ${{ variables.usersApiName }} \
        --deployment-container-image-name ${{ variables.usersApiImage }}

      az webapp create \
        --resource-group ${{ variables.resourceGroupName }} \
        --plan ${{ variables.appServicePlan }} \
        --name ${{ variables.todosAuthApiName }} \
        --deployment-container-image-name ${{ variables.todosAuthApiImage }}

      az webapp create \
        --resource-group ${{ variables.resourceGroupName }} \
        --plan ${{ variables.appServicePlan }} \
        --name ${{ variables.todosFrontendName }} \
        --deployment-container-image-name ${{ variables.todosFrontendImage }}

      az webapp create \
        --resource-group ${{ variables.resourceGroupName }} \
        --plan ${{ variables.appServicePlan }} \
        --name ${{ variables.logProcessorName }} \
        --deployment-container-image-name ${{ variables.logProcessorImage }}

  displayName: 'Create App Services with Container Images'
