trigger:
  branches:
      include:
        - master
  paths:
    include:
      - todos-api/**

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'todos-api'
  acrLoginServer: 'mytodosacr.azurecr.io'
  dockerRegistryServiceConnection: 'acr-connection' # Docker Registry SC name
  azureWebAppName: 'TODOs-API'                 # Azure Web App name
  azureSubscription: 'PipelineConnection'        # ARM SC name
  JWT_SECRET: PRFT 
  REDIS_HOST: todo-redis.redis.cache.windows.net
  REDIS_PORT: 6380
  REDIS_CHANNEL: log_channel
  ZIPKIN_URL: https://todo-zipkin-gqbcbmezgcbddwat.eastus-01.azurewebsites.net/api/v2/spans
  PORT: 8082

stages:
  - stage: BuildAndPush
    displayName: Build and Push Docker Image
    jobs:
      - job: Docker
        steps:
          - task: Docker@2
            displayName: Build and push image to ACR
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(imageName)
              command: buildAndPush
              Dockerfile: todos-api/Dockerfile
              buildContext: todos-api
              tags: |
                $(Build.BuildId)
          - task: AzureAppServiceSettings@1
            displayName: 'Set environment variables for Web App'
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(azureWebAppName)
              appSettings: |
                [
                  {
                    "name": "JWT_SECRET",
                    "value": "$(JWT_SECRET)"
                  },
                  {
                    "name": "ZIPKIN_URL",
                    "value": "$(ZIPKIN_URL)"
                  },
                  {
                    "name": "REDIS_HOST",
                    "value": "$(REDIS_HOST)"
                  },
                  {
                    "name": "REDIS_PORT",
                    "value": "$(REDIS_PORT)"
                  },
                  {
                    "name": "REDIS_CHANNEL",
                    "value": "$(REDIS_CHANNEL)"
                  },
                  {
                    "name": "PORT",
                    "value": "$(PORT)"
                  },
                  {
                    "name": "REDIS_PASSWORD",
                    "value": "$(REDIS_PASSWORD)"
                  }
                ]
  - stage: Deploy
    displayName: Deploy to Azure Web App
    dependsOn: BuildAndPush
    jobs:
      - job: DeployWebApp
        steps:
          - task: AzureWebAppContainer@1
            displayName: Deploy image to Azure Web App
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(azureWebAppName)
              containers: |
                $(acrLoginServer)/$(imageName):$(Build.BuildId)
