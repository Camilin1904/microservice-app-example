trigger:
  branch:
      include:
        - master
  paths:
    include:
      - log-message-processor/**

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'log-message-processor'
  acrLoginServer: 'mytodosacr.azurecr.io'
  dockerRegistryServiceConnection: 'acr-connection' # Docker Registry SC name
  azureWebAppName: 'log-message-processor'          # Azure Web App name
  azureSubscription: 'PipelineConnection'           # ARM SC name

  # Application-specific environment variables
  REDIS_HOST: 'redisTODO.redis.cache.windows.net'
  REDIS_PORT: '6380'
  REDIS_CHANNEL: 'log_channel'
  ZIPKIN_URL: https://todo-zipkin-gqbcbmezgcbddwat.eastus-01.azurewebsites.net

stages:
  - stage: BuildAndPush
    displayName: Build and Push Docker Image
    jobs:
      - job: Docker
        steps:
          - checkout: self
            displayName: Checkout Master Branch
            inputs:
              ref: refs/heads/master
          - task: Docker@2
            displayName: Build and push image to ACR
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(imageName)
              command: buildAndPush
              Dockerfile: log-message-processor/Dockerfile
              buildContext: log-message-processor
              tags: |
                $(Build.BuildId)

  - stage: Deploy
    displayName: Deploy to Azure Web App
    dependsOn: BuildAndPush
    jobs:
      - job: DeployWebApp
        steps:
          - task: AzureWebAppContainer@1
            displayName: Deploy image to Azure Web App
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(azureWebAppName)
              containers: |
                $(acrLoginServer)/$(imageName):$(Build.BuildId)
              containerCommand: ""  # uses CMD from Dockerfile
              envVars: |
                REDIS_HOST=$(REDIS_HOST)
                REDIS_PORT=$(REDIS_PORT)
                REDIS_CHANNEL=$(REDIS_CHANNEL)
                ZIPKIN_URL=$(ZIPKIN_URL)
